{% extends 'base.html.twig' %}

{% block title %}tracking{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body {
            padding: 20px;
            background-color:#ffffc9
        }

        p { margin : 0; }
        button{
            margin-top: 15px;
        }
    </style>
    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        #floating-panel {
            position: absolute;
            top: 10px;
            left: 25%;
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
            text-align: center;
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }
        #floating-panel {
            background-color: #fff;
            border: 1px solid #999;
            left: 25%;
            padding: 5px;
            position: absolute;
            top: 10px;
            z-index: 5;
        }
    </style>
{% endblock %}

{% block body %}
{#
{{ csrf_token('authenticate') }}
post({{ path('user_tracking') }}, {
                    latitude:"5",
                    longitude:"5",
                    _token:'asdasd'
                });


        {{ form_row(form.longitude, {'value' : longitude }) }}
        {{ form_row(form.latitude,  {'value' : latitude  }) }}
        {% set latitude %}1{% endset %}
        {% set longitude %}2{% endset %}


        {{ form_start(form) }}
            <input type="hidden" name="longitude" value=5 />
            <input type="hidden" name="latitude"  value=5 />

            <button onclick=submit>Send my location</button>
        {{ form_end(form) }}


        <div>
        <form  action="{{ path('user_tracking') }}" method="post">
            <input type="hidden" name="longitude" value=5 />
            <input type="hidden" name="latitude"  value=5 />
            <input type="hidden" name="_token" value="{{ csrf_token('authenticate') }}">
            <button onclick=submit>Send my location</button>
        </form>
        </div>
#}

    {% set latitude %}0{% endset %}
    {% set longitude %}0{% endset %}

    <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

    {{ form_start(form) }}
        {{ form_row(form.longitude, {'value' : longitude }) }}
        {{ form_row(form.latitude,  {'value' : latitude  }) }}
        <input type="hidden" name="longitude" id="lon" value=5 />
        <input type="hidden" name="latitude"  id="lat" value=5 />
        <button onclick=submit>Send my location</button>
    {{ form_end(form) }}



        <p><button onclick="geoFindMe()">Show my location</button></p>
        <div id="out"></div><div id="loc"></div>

    <div id="floating-panel">
        <button onclick="toggleHeatmap()">Toggle Heatmap</button>
        <button onclick="changeGradient()">Change gradient</button>
        <button onclick="changeRadius()">Change radius</button>
        <button onclick="changeOpacity()">Change opacity</button>
    </div>
    <div id="map"></div>



{% endblock %}


{% block javascripts %}

    <script type="text/javascript">

        function post(path, params, method) {
            method = method || "post"; // Set method to post by default if not specified.

            // The rest of this code assumes you are not using a library.
            // It can be made less wordy if you use one.
            var form = document.createElement("form");
            form.setAttribute("method", method);
            form.setAttribute("action", path);

            for(var key in params) {
                if(params.hasOwnProperty(key)) {
                    var hiddenField = document.createElement("input");
                    hiddenField.setAttribute("type", "hidden");
                    hiddenField.setAttribute("name", key);
                    hiddenField.setAttribute("value", params[key]);

                    form.appendChild(hiddenField);
                }
            }

            document.body.appendChild(form);
            form.submit();
        }


        function geoFindMe() {
            var output = document.getElementById("out");

            if (!navigator.geolocation){
                output.innerHTML = "<p>Geolocation is not supported by your browser</p>";
                return;
            }

            function success(position) {
                var latitude  = position.coords.latitude;
                var longitude = position.coords.longitude;
                document.getElementById("lat").innerHTML = position.coords.latitude;
                document.getElementById("lon").innerHTML = position.coords.longitude;

                output.innerHTML = '<p>Latitude is ' + latitude + '° <br>Longitude is ' + longitude + '°</p>';

                var lat=document.getElementById("lat");
                var lon=document.getElementById("lon");
                lat.value=latitude;
                lon.value=longitude;

                var img = new Image();
                img.src = "https://maps.googleapis.com/maps/api/staticmap?center=" + latitude + "," + longitude + "&zoom=13&size=300x300&sensor=false";



                output.appendChild(img);
            }

            function error() {
                output.innerHTML = "Unable to retrieve your location";
            }

            output.innerHTML = "<p>Locating…</p>";

            navigator.geolocation.getCurrentPosition(success, error);

        }



        geoFindMe();


    </script>


    <script>

        // This example requires the Visualization library. Include the libraries=visualization
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=visualization">

        var map, heatmap;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16 ,
                center: {lat:37.914513 , lng: -4.719203},
                mapTypeId: 'satellite'
            });

            heatmap = new google.maps.visualization.HeatmapLayer({
                data: getPoints(),
                map: map
            });
        }

        function toggleHeatmap() {
            heatmap.setMap(heatmap.getMap() ? null : map);
        }

        function changeGradient() {
            var gradient = [
                'rgba(0, 255, 255, 0)',
                'rgba(0, 255, 255, 1)',
                'rgba(0, 191, 255, 1)',
                'rgba(0, 127, 255, 1)',
                'rgba(0, 63, 255, 1)',
                'rgba(0, 0, 255, 1)',
                'rgba(0, 0, 223, 1)',
                'rgba(0, 0, 191, 1)',
                'rgba(0, 0, 159, 1)',
                'rgba(0, 0, 127, 1)',
                'rgba(63, 0, 91, 1)',
                'rgba(127, 0, 63, 1)',
                'rgba(191, 0, 31, 1)',
                'rgba(255, 0, 0, 1)',
            ]
            heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
        }

        function changeRadius() {
            heatmap.set('radius', heatmap.get('radius') ? null : 20);
        }

        function changeOpacity() {
            heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
        }

        // Heatmap data: Points
        function getPoints() {
            return [
                {%  for location in locations %}
                new google.maps.LatLng({{  location }}),
                {% endfor %}

            ];
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYYrMWQ5ILWdoR5PrGyP7CZWTW5Xi-2Cg&libraries=visualization&callback=initMap">
    </script>


{% endblock %}